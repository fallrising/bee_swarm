version: '3.8'

services:
  # 系统协调器 (独立部署)
  coordinator:
    build: 
      context: ./coordinator
      dockerfile: Dockerfile
    environment:
      - GITHUB_TOKEN=${GITHUB_TOKEN_COORDINATOR}
      - GITHUB_REPOSITORY=${GITHUB_REPOSITORY}
      - REDIS_URL=${REDIS_URL}
      - DATABASE_URL=${DATABASE_URL}
      - LOG_LEVEL=${LOG_LEVEL}
    ports:
      - "8000:8000"  # FastAPI
      - "5555:5555"  # Flower (Celery监控)
    volumes:
      - coordinator_data:/app/data
      - coordinator_logs:/app/logs
      - coordinator_config:/app/config
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '0.5'
        reservations:
          memory: 512M
          cpus: '0.25'
    networks:
      - bee-swarm-network
    depends_on:
      - redis
      - postgres

  # 角色容器 - 基于VNC Lab
  # 每个VPS只运行一个角色容器 + 基础设施服务
  
  # 产品经理角色 (VPS-01)
  pm-01:
    build: 
      context: ./roles/product_manager
      dockerfile: Dockerfile
    environment:
      - ROLE_NAME=product_manager_01
      - ROLE_ID=pm-01
      - GITHUB_USERNAME=${GITHUB_USERNAME_PM_01}
      - GITHUB_TOKEN=${GITHUB_TOKEN_PM_01}
      - VNC_PASSWORD=${VNC_PASSWORD_PM_01}
      - TTYD_PASSWORD=${TTYD_PASSWORD_PM_01}
      - COORDINATOR_URL=${COORDINATOR_URL}
      - REDIS_URL=${REDIS_URL}
      - AI_TOOLS=gemini-cli,claude-code,rovo-dev,cursor
    ports:
      - "6080:6080"  # noVNC
      - "7680:7681"  # ttyd
    volumes:
      - pm_01_data:/app/data
      - pm_01_logs:/app/logs
      - pm_01_config:/app/config
      - shared_workspace:/workspace
      - firefox_profile_pm_01:/home/firefox-profile
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 3G
          cpus: '1.5'
        reservations:
          memory: 2G
          cpus: '1.0'
    networks:
      - bee-swarm-network

  # 后端开发角色 (VPS-02)
  backend-01:
    build: 
      context: ./roles/backend_developer
      dockerfile: Dockerfile
    environment:
      - ROLE_NAME=backend_developer_01
      - ROLE_ID=backend-01
      - GITHUB_USERNAME=${GITHUB_USERNAME_BACKEND_01}
      - GITHUB_TOKEN=${GITHUB_TOKEN_BACKEND_01}
      - VNC_PASSWORD=${VNC_PASSWORD_BACKEND_01}
      - TTYD_PASSWORD=${TTYD_PASSWORD_BACKEND_01}
      - COORDINATOR_URL=${COORDINATOR_URL}
      - REDIS_URL=${REDIS_URL}
      - AI_TOOLS=gemini-cli,claude-code,rovo-dev,cursor,warp
    ports:
      - "6081:6080"  # noVNC
      - "7681:7681"  # ttyd
    volumes:
      - backend_01_data:/app/data
      - backend_01_logs:/app/logs
      - backend_01_config:/app/config
      - shared_workspace:/workspace
      - firefox_profile_backend_01:/home/firefox-profile
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 4G
          cpus: '2.0'
        reservations:
          memory: 3G
          cpus: '1.5'
    networks:
      - bee-swarm-network

  # 前端开发角色 (VPS-03)
  frontend-01:
    build: 
      context: ./roles/frontend_developer
      dockerfile: Dockerfile
    environment:
      - ROLE_NAME=frontend_developer_01
      - ROLE_ID=frontend-01
      - GITHUB_USERNAME=${GITHUB_USERNAME_FRONTEND_01}
      - GITHUB_TOKEN=${GITHUB_TOKEN_FRONTEND_01}
      - VNC_PASSWORD=${VNC_PASSWORD_FRONTEND_01}
      - TTYD_PASSWORD=${TTYD_PASSWORD_FRONTEND_01}
      - COORDINATOR_URL=${COORDINATOR_URL}
      - REDIS_URL=${REDIS_URL}
      - AI_TOOLS=gemini-cli,claude-code,rovo-dev,cursor,warp
    ports:
      - "6082:6080"  # noVNC
      - "7682:7681"  # ttyd
    volumes:
      - frontend_01_data:/app/data
      - frontend_01_logs:/app/logs
      - frontend_01_config:/app/config
      - shared_workspace:/workspace
      - firefox_profile_frontend_01:/home/firefox-profile
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 3G
          cpus: '1.5'
        reservations:
          memory: 2G
          cpus: '1.0'
    networks:
      - bee-swarm-network

  # QA工程师角色 (VPS-04)
  qa-01:
    build: 
      context: ./roles/qa_engineer
      dockerfile: Dockerfile
    environment:
      - ROLE_NAME=qa_engineer_01
      - ROLE_ID=qa-01
      - GITHUB_USERNAME=${GITHUB_USERNAME_QA_01}
      - GITHUB_TOKEN=${GITHUB_TOKEN_QA_01}
      - VNC_PASSWORD=${VNC_PASSWORD_QA_01}
      - TTYD_PASSWORD=${TTYD_PASSWORD_QA_01}
      - COORDINATOR_URL=${COORDINATOR_URL}
      - REDIS_URL=${REDIS_URL}
      - AI_TOOLS=gemini-cli,claude-code,rovo-dev,cursor
    ports:
      - "6083:6080"  # noVNC
      - "7683:7681"  # ttyd
    volumes:
      - qa_01_data:/app/data
      - qa_01_logs:/app/logs
      - qa_01_config:/app/config
      - shared_workspace:/workspace
      - firefox_profile_qa_01:/home/firefox-profile
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 3G
          cpus: '1.5'
        reservations:
          memory: 2G
          cpus: '1.0'
    networks:
      - bee-swarm-network

  # DevOps工程师角色 (VPS-05)
  devops-01:
    build: 
      context: ./roles/devops_engineer
      dockerfile: Dockerfile
    environment:
      - ROLE_NAME=devops_engineer_01
      - ROLE_ID=devops-01
      - GITHUB_USERNAME=${GITHUB_USERNAME_DEVOPS_01}
      - GITHUB_TOKEN=${GITHUB_TOKEN_DEVOPS_01}
      - VNC_PASSWORD=${VNC_PASSWORD_DEVOPS_01}
      - TTYD_PASSWORD=${TTYD_PASSWORD_DEVOPS_01}
      - COORDINATOR_URL=${COORDINATOR_URL}
      - REDIS_URL=${REDIS_URL}
      - AI_TOOLS=gemini-cli,claude-code,rovo-dev,cursor
    ports:
      - "6084:6080"  # noVNC
      - "7684:7681"  # ttyd
    volumes:
      - devops_01_data:/app/data
      - devops_01_logs:/app/logs
      - devops_01_config:/app/config
      - shared_workspace:/workspace
      - firefox_profile_devops_01:/home/firefox-profile
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 3G
          cpus: '1.5'
        reservations:
          memory: 2G
          cpus: '1.0'
    networks:
      - bee-swarm-network

  # 基础设施服务 (每个VPS都需要)
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    networks:
      - bee-swarm-network

  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    networks:
      - bee-swarm-network

  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    restart: unless-stopped
    networks:
      - bee-swarm-network

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources
    restart: unless-stopped
    networks:
      - bee-swarm-network

volumes:
  # 协调器数据卷
  coordinator_data:
  coordinator_logs:
  coordinator_config:
  
  # 角色数据卷
  pm_01_data:
  pm_01_logs:
  pm_01_config:
  backend_01_data:
  backend_01_logs:
  backend_01_config:
  frontend_01_data:
  frontend_01_logs:
  frontend_01_config:
  qa_01_data:
  qa_01_logs:
  qa_01_config:
  devops_01_data:
  devops_01_logs:
  devops_01_config:
  
  # Firefox配置文件
  firefox_profile_pm_01:
  firefox_profile_backend_01:
  firefox_profile_frontend_01:
  firefox_profile_qa_01:
  firefox_profile_devops_01:
  
  # 共享工作空间
  shared_workspace:
  
  # 服务数据卷
  redis_data:
  postgres_data:
  prometheus_data:
  grafana_data:

networks:
  bee-swarm-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16 